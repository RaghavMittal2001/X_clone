
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `User` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model User
 * 
 */
export type UserModel = runtime.Types.Result.DefaultSelection<Prisma.$UserPayload>

export type AggregateUser = {
  _count: UserCountAggregateOutputType | null
  _avg: UserAvgAggregateOutputType | null
  _sum: UserSumAggregateOutputType | null
  _min: UserMinAggregateOutputType | null
  _max: UserMaxAggregateOutputType | null
}

export type UserAvgAggregateOutputType = {
  id: number | null
}

export type UserSumAggregateOutputType = {
  id: number | null
}

export type UserMinAggregateOutputType = {
  id: number | null
  fullName: string | null
  username: string | null
  email: string | null
  password: string | null
  profileImage: string | null
  dateOfBirth: Date | null
  phoneNumber: string | null
}

export type UserMaxAggregateOutputType = {
  id: number | null
  fullName: string | null
  username: string | null
  email: string | null
  password: string | null
  profileImage: string | null
  dateOfBirth: Date | null
  phoneNumber: string | null
}

export type UserCountAggregateOutputType = {
  id: number
  fullName: number
  username: number
  email: number
  password: number
  profileImage: number
  dateOfBirth: number
  phoneNumber: number
  _all: number
}


export type UserAvgAggregateInputType = {
  id?: true
}

export type UserSumAggregateInputType = {
  id?: true
}

export type UserMinAggregateInputType = {
  id?: true
  fullName?: true
  username?: true
  email?: true
  password?: true
  profileImage?: true
  dateOfBirth?: true
  phoneNumber?: true
}

export type UserMaxAggregateInputType = {
  id?: true
  fullName?: true
  username?: true
  email?: true
  password?: true
  profileImage?: true
  dateOfBirth?: true
  phoneNumber?: true
}

export type UserCountAggregateInputType = {
  id?: true
  fullName?: true
  username?: true
  email?: true
  password?: true
  profileImage?: true
  dateOfBirth?: true
  phoneNumber?: true
  _all?: true
}

export type UserAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which User to aggregate.
   */
  where?: Prisma.UserWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Users to fetch.
   */
  orderBy?: Prisma.UserOrderByWithRelationInput | Prisma.UserOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.UserWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Users from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Users.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned Users
  **/
  _count?: true | UserCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: UserAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: UserSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: UserMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: UserMaxAggregateInputType
}

export type GetUserAggregateType<T extends UserAggregateArgs> = {
      [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateUser[P]>
    : Prisma.GetScalarType<T[P], AggregateUser[P]>
}




export type UserGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.UserWhereInput
  orderBy?: Prisma.UserOrderByWithAggregationInput | Prisma.UserOrderByWithAggregationInput[]
  by: Prisma.UserScalarFieldEnum[] | Prisma.UserScalarFieldEnum
  having?: Prisma.UserScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: UserCountAggregateInputType | true
  _avg?: UserAvgAggregateInputType
  _sum?: UserSumAggregateInputType
  _min?: UserMinAggregateInputType
  _max?: UserMaxAggregateInputType
}

export type UserGroupByOutputType = {
  id: number
  fullName: string | null
  username: string | null
  email: string
  password: string | null
  profileImage: string | null
  dateOfBirth: Date | null
  phoneNumber: string | null
  _count: UserCountAggregateOutputType | null
  _avg: UserAvgAggregateOutputType | null
  _sum: UserSumAggregateOutputType | null
  _min: UserMinAggregateOutputType | null
  _max: UserMaxAggregateOutputType | null
}

type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<UserGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], UserGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], UserGroupByOutputType[P]>
      }
    >
  > 



export type UserWhereInput = {
  AND?: Prisma.UserWhereInput | Prisma.UserWhereInput[]
  OR?: Prisma.UserWhereInput[]
  NOT?: Prisma.UserWhereInput | Prisma.UserWhereInput[]
  id?: Prisma.IntFilter<"User"> | number
  fullName?: Prisma.StringNullableFilter<"User"> | string | null
  username?: Prisma.StringNullableFilter<"User"> | string | null
  email?: Prisma.StringFilter<"User"> | string
  password?: Prisma.StringNullableFilter<"User"> | string | null
  profileImage?: Prisma.StringNullableFilter<"User"> | string | null
  dateOfBirth?: Prisma.DateTimeNullableFilter<"User"> | Date | string | null
  phoneNumber?: Prisma.StringNullableFilter<"User"> | string | null
  tweets?: Prisma.TweetListRelationFilter
  likes?: Prisma.LikeListRelationFilter
  replies?: Prisma.ReplyListRelationFilter
  bookmarks?: Prisma.BookmarkListRelationFilter
  followers?: Prisma.FollowListRelationFilter
  following?: Prisma.FollowListRelationFilter
  notifications?: Prisma.NotificationListRelationFilter
  sentMessages?: Prisma.MessageListRelationFilter
  receivedMessages?: Prisma.MessageListRelationFilter
}

export type UserOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  fullName?: Prisma.SortOrderInput | Prisma.SortOrder
  username?: Prisma.SortOrderInput | Prisma.SortOrder
  email?: Prisma.SortOrder
  password?: Prisma.SortOrderInput | Prisma.SortOrder
  profileImage?: Prisma.SortOrderInput | Prisma.SortOrder
  dateOfBirth?: Prisma.SortOrderInput | Prisma.SortOrder
  phoneNumber?: Prisma.SortOrderInput | Prisma.SortOrder
  tweets?: Prisma.TweetOrderByRelationAggregateInput
  likes?: Prisma.LikeOrderByRelationAggregateInput
  replies?: Prisma.ReplyOrderByRelationAggregateInput
  bookmarks?: Prisma.BookmarkOrderByRelationAggregateInput
  followers?: Prisma.FollowOrderByRelationAggregateInput
  following?: Prisma.FollowOrderByRelationAggregateInput
  notifications?: Prisma.NotificationOrderByRelationAggregateInput
  sentMessages?: Prisma.MessageOrderByRelationAggregateInput
  receivedMessages?: Prisma.MessageOrderByRelationAggregateInput
}

export type UserWhereUniqueInput = Prisma.AtLeast<{
  id?: number
  email?: string
  phoneNumber?: string
  AND?: Prisma.UserWhereInput | Prisma.UserWhereInput[]
  OR?: Prisma.UserWhereInput[]
  NOT?: Prisma.UserWhereInput | Prisma.UserWhereInput[]
  fullName?: Prisma.StringNullableFilter<"User"> | string | null
  username?: Prisma.StringNullableFilter<"User"> | string | null
  password?: Prisma.StringNullableFilter<"User"> | string | null
  profileImage?: Prisma.StringNullableFilter<"User"> | string | null
  dateOfBirth?: Prisma.DateTimeNullableFilter<"User"> | Date | string | null
  tweets?: Prisma.TweetListRelationFilter
  likes?: Prisma.LikeListRelationFilter
  replies?: Prisma.ReplyListRelationFilter
  bookmarks?: Prisma.BookmarkListRelationFilter
  followers?: Prisma.FollowListRelationFilter
  following?: Prisma.FollowListRelationFilter
  notifications?: Prisma.NotificationListRelationFilter
  sentMessages?: Prisma.MessageListRelationFilter
  receivedMessages?: Prisma.MessageListRelationFilter
}, "id" | "email" | "phoneNumber">

export type UserOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  fullName?: Prisma.SortOrderInput | Prisma.SortOrder
  username?: Prisma.SortOrderInput | Prisma.SortOrder
  email?: Prisma.SortOrder
  password?: Prisma.SortOrderInput | Prisma.SortOrder
  profileImage?: Prisma.SortOrderInput | Prisma.SortOrder
  dateOfBirth?: Prisma.SortOrderInput | Prisma.SortOrder
  phoneNumber?: Prisma.SortOrderInput | Prisma.SortOrder
  _count?: Prisma.UserCountOrderByAggregateInput
  _avg?: Prisma.UserAvgOrderByAggregateInput
  _max?: Prisma.UserMaxOrderByAggregateInput
  _min?: Prisma.UserMinOrderByAggregateInput
  _sum?: Prisma.UserSumOrderByAggregateInput
}

export type UserScalarWhereWithAggregatesInput = {
  AND?: Prisma.UserScalarWhereWithAggregatesInput | Prisma.UserScalarWhereWithAggregatesInput[]
  OR?: Prisma.UserScalarWhereWithAggregatesInput[]
  NOT?: Prisma.UserScalarWhereWithAggregatesInput | Prisma.UserScalarWhereWithAggregatesInput[]
  id?: Prisma.IntWithAggregatesFilter<"User"> | number
  fullName?: Prisma.StringNullableWithAggregatesFilter<"User"> | string | null
  username?: Prisma.StringNullableWithAggregatesFilter<"User"> | string | null
  email?: Prisma.StringWithAggregatesFilter<"User"> | string
  password?: Prisma.StringNullableWithAggregatesFilter<"User"> | string | null
  profileImage?: Prisma.StringNullableWithAggregatesFilter<"User"> | string | null
  dateOfBirth?: Prisma.DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
  phoneNumber?: Prisma.StringNullableWithAggregatesFilter<"User"> | string | null
}

export type UserCreateInput = {
  fullName?: string | null
  username?: string | null
  email: string
  password?: string | null
  profileImage?: string | null
  dateOfBirth?: Date | string | null
  phoneNumber?: string | null
  tweets?: Prisma.TweetCreateNestedManyWithoutAuthorInput
  likes?: Prisma.LikeCreateNestedManyWithoutUserInput
  replies?: Prisma.ReplyCreateNestedManyWithoutUserInput
  bookmarks?: Prisma.BookmarkCreateNestedManyWithoutUserInput
  followers?: Prisma.FollowCreateNestedManyWithoutFollowerInput
  following?: Prisma.FollowCreateNestedManyWithoutFollowingInput
  notifications?: Prisma.NotificationCreateNestedManyWithoutUserInput
  sentMessages?: Prisma.MessageCreateNestedManyWithoutSenderInput
  receivedMessages?: Prisma.MessageCreateNestedManyWithoutReceiverInput
}

export type UserUncheckedCreateInput = {
  id?: number
  fullName?: string | null
  username?: string | null
  email: string
  password?: string | null
  profileImage?: string | null
  dateOfBirth?: Date | string | null
  phoneNumber?: string | null
  tweets?: Prisma.TweetUncheckedCreateNestedManyWithoutAuthorInput
  likes?: Prisma.LikeUncheckedCreateNestedManyWithoutUserInput
  replies?: Prisma.ReplyUncheckedCreateNestedManyWithoutUserInput
  bookmarks?: Prisma.BookmarkUncheckedCreateNestedManyWithoutUserInput
  followers?: Prisma.FollowUncheckedCreateNestedManyWithoutFollowerInput
  following?: Prisma.FollowUncheckedCreateNestedManyWithoutFollowingInput
  notifications?: Prisma.NotificationUncheckedCreateNestedManyWithoutUserInput
  sentMessages?: Prisma.MessageUncheckedCreateNestedManyWithoutSenderInput
  receivedMessages?: Prisma.MessageUncheckedCreateNestedManyWithoutReceiverInput
}

export type UserUpdateInput = {
  fullName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  username?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  profileImage?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  dateOfBirth?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tweets?: Prisma.TweetUpdateManyWithoutAuthorNestedInput
  likes?: Prisma.LikeUpdateManyWithoutUserNestedInput
  replies?: Prisma.ReplyUpdateManyWithoutUserNestedInput
  bookmarks?: Prisma.BookmarkUpdateManyWithoutUserNestedInput
  followers?: Prisma.FollowUpdateManyWithoutFollowerNestedInput
  following?: Prisma.FollowUpdateManyWithoutFollowingNestedInput
  notifications?: Prisma.NotificationUpdateManyWithoutUserNestedInput
  sentMessages?: Prisma.MessageUpdateManyWithoutSenderNestedInput
  receivedMessages?: Prisma.MessageUpdateManyWithoutReceiverNestedInput
}

export type UserUncheckedUpdateInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  fullName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  username?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  profileImage?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  dateOfBirth?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tweets?: Prisma.TweetUncheckedUpdateManyWithoutAuthorNestedInput
  likes?: Prisma.LikeUncheckedUpdateManyWithoutUserNestedInput
  replies?: Prisma.ReplyUncheckedUpdateManyWithoutUserNestedInput
  bookmarks?: Prisma.BookmarkUncheckedUpdateManyWithoutUserNestedInput
  followers?: Prisma.FollowUncheckedUpdateManyWithoutFollowerNestedInput
  following?: Prisma.FollowUncheckedUpdateManyWithoutFollowingNestedInput
  notifications?: Prisma.NotificationUncheckedUpdateManyWithoutUserNestedInput
  sentMessages?: Prisma.MessageUncheckedUpdateManyWithoutSenderNestedInput
  receivedMessages?: Prisma.MessageUncheckedUpdateManyWithoutReceiverNestedInput
}

export type UserCreateManyInput = {
  id?: number
  fullName?: string | null
  username?: string | null
  email: string
  password?: string | null
  profileImage?: string | null
  dateOfBirth?: Date | string | null
  phoneNumber?: string | null
}

export type UserUpdateManyMutationInput = {
  fullName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  username?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  profileImage?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  dateOfBirth?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type UserUncheckedUpdateManyInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  fullName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  username?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  profileImage?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  dateOfBirth?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type UserCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  fullName?: Prisma.SortOrder
  username?: Prisma.SortOrder
  email?: Prisma.SortOrder
  password?: Prisma.SortOrder
  profileImage?: Prisma.SortOrder
  dateOfBirth?: Prisma.SortOrder
  phoneNumber?: Prisma.SortOrder
}

export type UserAvgOrderByAggregateInput = {
  id?: Prisma.SortOrder
}

export type UserMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  fullName?: Prisma.SortOrder
  username?: Prisma.SortOrder
  email?: Prisma.SortOrder
  password?: Prisma.SortOrder
  profileImage?: Prisma.SortOrder
  dateOfBirth?: Prisma.SortOrder
  phoneNumber?: Prisma.SortOrder
}

export type UserMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  fullName?: Prisma.SortOrder
  username?: Prisma.SortOrder
  email?: Prisma.SortOrder
  password?: Prisma.SortOrder
  profileImage?: Prisma.SortOrder
  dateOfBirth?: Prisma.SortOrder
  phoneNumber?: Prisma.SortOrder
}

export type UserSumOrderByAggregateInput = {
  id?: Prisma.SortOrder
}

export type UserScalarRelationFilter = {
  is?: Prisma.UserWhereInput
  isNot?: Prisma.UserWhereInput
}

export type NullableStringFieldUpdateOperationsInput = {
  set?: string | null
}

export type StringFieldUpdateOperationsInput = {
  set?: string
}

export type NullableDateTimeFieldUpdateOperationsInput = {
  set?: Date | string | null
}

export type IntFieldUpdateOperationsInput = {
  set?: number
  increment?: number
  decrement?: number
  multiply?: number
  divide?: number
}

export type UserCreateNestedOneWithoutTweetsInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutTweetsInput, Prisma.UserUncheckedCreateWithoutTweetsInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutTweetsInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserUpdateOneRequiredWithoutTweetsNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutTweetsInput, Prisma.UserUncheckedCreateWithoutTweetsInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutTweetsInput
  upsert?: Prisma.UserUpsertWithoutTweetsInput
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutTweetsInput, Prisma.UserUpdateWithoutTweetsInput>, Prisma.UserUncheckedUpdateWithoutTweetsInput>
}

export type UserCreateNestedOneWithoutLikesInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutLikesInput, Prisma.UserUncheckedCreateWithoutLikesInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutLikesInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserUpdateOneRequiredWithoutLikesNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutLikesInput, Prisma.UserUncheckedCreateWithoutLikesInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutLikesInput
  upsert?: Prisma.UserUpsertWithoutLikesInput
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutLikesInput, Prisma.UserUpdateWithoutLikesInput>, Prisma.UserUncheckedUpdateWithoutLikesInput>
}

export type UserCreateNestedOneWithoutRepliesInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutRepliesInput, Prisma.UserUncheckedCreateWithoutRepliesInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutRepliesInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserUpdateOneRequiredWithoutRepliesNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutRepliesInput, Prisma.UserUncheckedCreateWithoutRepliesInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutRepliesInput
  upsert?: Prisma.UserUpsertWithoutRepliesInput
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutRepliesInput, Prisma.UserUpdateWithoutRepliesInput>, Prisma.UserUncheckedUpdateWithoutRepliesInput>
}

export type UserCreateNestedOneWithoutBookmarksInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutBookmarksInput, Prisma.UserUncheckedCreateWithoutBookmarksInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutBookmarksInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserUpdateOneRequiredWithoutBookmarksNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutBookmarksInput, Prisma.UserUncheckedCreateWithoutBookmarksInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutBookmarksInput
  upsert?: Prisma.UserUpsertWithoutBookmarksInput
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutBookmarksInput, Prisma.UserUpdateWithoutBookmarksInput>, Prisma.UserUncheckedUpdateWithoutBookmarksInput>
}

export type UserCreateNestedOneWithoutFollowersInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutFollowersInput, Prisma.UserUncheckedCreateWithoutFollowersInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutFollowersInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserCreateNestedOneWithoutFollowingInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutFollowingInput, Prisma.UserUncheckedCreateWithoutFollowingInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutFollowingInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserUpdateOneRequiredWithoutFollowersNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutFollowersInput, Prisma.UserUncheckedCreateWithoutFollowersInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutFollowersInput
  upsert?: Prisma.UserUpsertWithoutFollowersInput
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutFollowersInput, Prisma.UserUpdateWithoutFollowersInput>, Prisma.UserUncheckedUpdateWithoutFollowersInput>
}

export type UserUpdateOneRequiredWithoutFollowingNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutFollowingInput, Prisma.UserUncheckedCreateWithoutFollowingInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutFollowingInput
  upsert?: Prisma.UserUpsertWithoutFollowingInput
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutFollowingInput, Prisma.UserUpdateWithoutFollowingInput>, Prisma.UserUncheckedUpdateWithoutFollowingInput>
}

export type UserCreateNestedOneWithoutNotificationsInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutNotificationsInput, Prisma.UserUncheckedCreateWithoutNotificationsInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutNotificationsInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserUpdateOneRequiredWithoutNotificationsNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutNotificationsInput, Prisma.UserUncheckedCreateWithoutNotificationsInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutNotificationsInput
  upsert?: Prisma.UserUpsertWithoutNotificationsInput
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutNotificationsInput, Prisma.UserUpdateWithoutNotificationsInput>, Prisma.UserUncheckedUpdateWithoutNotificationsInput>
}

export type UserCreateNestedOneWithoutSentMessagesInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutSentMessagesInput, Prisma.UserUncheckedCreateWithoutSentMessagesInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutSentMessagesInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserCreateNestedOneWithoutReceivedMessagesInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutReceivedMessagesInput, Prisma.UserUncheckedCreateWithoutReceivedMessagesInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutReceivedMessagesInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserUpdateOneRequiredWithoutSentMessagesNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutSentMessagesInput, Prisma.UserUncheckedCreateWithoutSentMessagesInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutSentMessagesInput
  upsert?: Prisma.UserUpsertWithoutSentMessagesInput
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutSentMessagesInput, Prisma.UserUpdateWithoutSentMessagesInput>, Prisma.UserUncheckedUpdateWithoutSentMessagesInput>
}

export type UserUpdateOneRequiredWithoutReceivedMessagesNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutReceivedMessagesInput, Prisma.UserUncheckedCreateWithoutReceivedMessagesInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutReceivedMessagesInput
  upsert?: Prisma.UserUpsertWithoutReceivedMessagesInput
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutReceivedMessagesInput, Prisma.UserUpdateWithoutReceivedMessagesInput>, Prisma.UserUncheckedUpdateWithoutReceivedMessagesInput>
}

export type UserCreateWithoutTweetsInput = {
  fullName?: string | null
  username?: string | null
  email: string
  password?: string | null
  profileImage?: string | null
  dateOfBirth?: Date | string | null
  phoneNumber?: string | null
  likes?: Prisma.LikeCreateNestedManyWithoutUserInput
  replies?: Prisma.ReplyCreateNestedManyWithoutUserInput
  bookmarks?: Prisma.BookmarkCreateNestedManyWithoutUserInput
  followers?: Prisma.FollowCreateNestedManyWithoutFollowerInput
  following?: Prisma.FollowCreateNestedManyWithoutFollowingInput
  notifications?: Prisma.NotificationCreateNestedManyWithoutUserInput
  sentMessages?: Prisma.MessageCreateNestedManyWithoutSenderInput
  receivedMessages?: Prisma.MessageCreateNestedManyWithoutReceiverInput
}

export type UserUncheckedCreateWithoutTweetsInput = {
  id?: number
  fullName?: string | null
  username?: string | null
  email: string
  password?: string | null
  profileImage?: string | null
  dateOfBirth?: Date | string | null
  phoneNumber?: string | null
  likes?: Prisma.LikeUncheckedCreateNestedManyWithoutUserInput
  replies?: Prisma.ReplyUncheckedCreateNestedManyWithoutUserInput
  bookmarks?: Prisma.BookmarkUncheckedCreateNestedManyWithoutUserInput
  followers?: Prisma.FollowUncheckedCreateNestedManyWithoutFollowerInput
  following?: Prisma.FollowUncheckedCreateNestedManyWithoutFollowingInput
  notifications?: Prisma.NotificationUncheckedCreateNestedManyWithoutUserInput
  sentMessages?: Prisma.MessageUncheckedCreateNestedManyWithoutSenderInput
  receivedMessages?: Prisma.MessageUncheckedCreateNestedManyWithoutReceiverInput
}

export type UserCreateOrConnectWithoutTweetsInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutTweetsInput, Prisma.UserUncheckedCreateWithoutTweetsInput>
}

export type UserUpsertWithoutTweetsInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutTweetsInput, Prisma.UserUncheckedUpdateWithoutTweetsInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutTweetsInput, Prisma.UserUncheckedCreateWithoutTweetsInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutTweetsInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutTweetsInput, Prisma.UserUncheckedUpdateWithoutTweetsInput>
}

export type UserUpdateWithoutTweetsInput = {
  fullName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  username?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  profileImage?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  dateOfBirth?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  likes?: Prisma.LikeUpdateManyWithoutUserNestedInput
  replies?: Prisma.ReplyUpdateManyWithoutUserNestedInput
  bookmarks?: Prisma.BookmarkUpdateManyWithoutUserNestedInput
  followers?: Prisma.FollowUpdateManyWithoutFollowerNestedInput
  following?: Prisma.FollowUpdateManyWithoutFollowingNestedInput
  notifications?: Prisma.NotificationUpdateManyWithoutUserNestedInput
  sentMessages?: Prisma.MessageUpdateManyWithoutSenderNestedInput
  receivedMessages?: Prisma.MessageUpdateManyWithoutReceiverNestedInput
}

export type UserUncheckedUpdateWithoutTweetsInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  fullName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  username?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  profileImage?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  dateOfBirth?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  likes?: Prisma.LikeUncheckedUpdateManyWithoutUserNestedInput
  replies?: Prisma.ReplyUncheckedUpdateManyWithoutUserNestedInput
  bookmarks?: Prisma.BookmarkUncheckedUpdateManyWithoutUserNestedInput
  followers?: Prisma.FollowUncheckedUpdateManyWithoutFollowerNestedInput
  following?: Prisma.FollowUncheckedUpdateManyWithoutFollowingNestedInput
  notifications?: Prisma.NotificationUncheckedUpdateManyWithoutUserNestedInput
  sentMessages?: Prisma.MessageUncheckedUpdateManyWithoutSenderNestedInput
  receivedMessages?: Prisma.MessageUncheckedUpdateManyWithoutReceiverNestedInput
}

export type UserCreateWithoutLikesInput = {
  fullName?: string | null
  username?: string | null
  email: string
  password?: string | null
  profileImage?: string | null
  dateOfBirth?: Date | string | null
  phoneNumber?: string | null
  tweets?: Prisma.TweetCreateNestedManyWithoutAuthorInput
  replies?: Prisma.ReplyCreateNestedManyWithoutUserInput
  bookmarks?: Prisma.BookmarkCreateNestedManyWithoutUserInput
  followers?: Prisma.FollowCreateNestedManyWithoutFollowerInput
  following?: Prisma.FollowCreateNestedManyWithoutFollowingInput
  notifications?: Prisma.NotificationCreateNestedManyWithoutUserInput
  sentMessages?: Prisma.MessageCreateNestedManyWithoutSenderInput
  receivedMessages?: Prisma.MessageCreateNestedManyWithoutReceiverInput
}

export type UserUncheckedCreateWithoutLikesInput = {
  id?: number
  fullName?: string | null
  username?: string | null
  email: string
  password?: string | null
  profileImage?: string | null
  dateOfBirth?: Date | string | null
  phoneNumber?: string | null
  tweets?: Prisma.TweetUncheckedCreateNestedManyWithoutAuthorInput
  replies?: Prisma.ReplyUncheckedCreateNestedManyWithoutUserInput
  bookmarks?: Prisma.BookmarkUncheckedCreateNestedManyWithoutUserInput
  followers?: Prisma.FollowUncheckedCreateNestedManyWithoutFollowerInput
  following?: Prisma.FollowUncheckedCreateNestedManyWithoutFollowingInput
  notifications?: Prisma.NotificationUncheckedCreateNestedManyWithoutUserInput
  sentMessages?: Prisma.MessageUncheckedCreateNestedManyWithoutSenderInput
  receivedMessages?: Prisma.MessageUncheckedCreateNestedManyWithoutReceiverInput
}

export type UserCreateOrConnectWithoutLikesInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutLikesInput, Prisma.UserUncheckedCreateWithoutLikesInput>
}

export type UserUpsertWithoutLikesInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutLikesInput, Prisma.UserUncheckedUpdateWithoutLikesInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutLikesInput, Prisma.UserUncheckedCreateWithoutLikesInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutLikesInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutLikesInput, Prisma.UserUncheckedUpdateWithoutLikesInput>
}

export type UserUpdateWithoutLikesInput = {
  fullName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  username?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  profileImage?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  dateOfBirth?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tweets?: Prisma.TweetUpdateManyWithoutAuthorNestedInput
  replies?: Prisma.ReplyUpdateManyWithoutUserNestedInput
  bookmarks?: Prisma.BookmarkUpdateManyWithoutUserNestedInput
  followers?: Prisma.FollowUpdateManyWithoutFollowerNestedInput
  following?: Prisma.FollowUpdateManyWithoutFollowingNestedInput
  notifications?: Prisma.NotificationUpdateManyWithoutUserNestedInput
  sentMessages?: Prisma.MessageUpdateManyWithoutSenderNestedInput
  receivedMessages?: Prisma.MessageUpdateManyWithoutReceiverNestedInput
}

export type UserUncheckedUpdateWithoutLikesInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  fullName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  username?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  profileImage?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  dateOfBirth?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tweets?: Prisma.TweetUncheckedUpdateManyWithoutAuthorNestedInput
  replies?: Prisma.ReplyUncheckedUpdateManyWithoutUserNestedInput
  bookmarks?: Prisma.BookmarkUncheckedUpdateManyWithoutUserNestedInput
  followers?: Prisma.FollowUncheckedUpdateManyWithoutFollowerNestedInput
  following?: Prisma.FollowUncheckedUpdateManyWithoutFollowingNestedInput
  notifications?: Prisma.NotificationUncheckedUpdateManyWithoutUserNestedInput
  sentMessages?: Prisma.MessageUncheckedUpdateManyWithoutSenderNestedInput
  receivedMessages?: Prisma.MessageUncheckedUpdateManyWithoutReceiverNestedInput
}

export type UserCreateWithoutRepliesInput = {
  fullName?: string | null
  username?: string | null
  email: string
  password?: string | null
  profileImage?: string | null
  dateOfBirth?: Date | string | null
  phoneNumber?: string | null
  tweets?: Prisma.TweetCreateNestedManyWithoutAuthorInput
  likes?: Prisma.LikeCreateNestedManyWithoutUserInput
  bookmarks?: Prisma.BookmarkCreateNestedManyWithoutUserInput
  followers?: Prisma.FollowCreateNestedManyWithoutFollowerInput
  following?: Prisma.FollowCreateNestedManyWithoutFollowingInput
  notifications?: Prisma.NotificationCreateNestedManyWithoutUserInput
  sentMessages?: Prisma.MessageCreateNestedManyWithoutSenderInput
  receivedMessages?: Prisma.MessageCreateNestedManyWithoutReceiverInput
}

export type UserUncheckedCreateWithoutRepliesInput = {
  id?: number
  fullName?: string | null
  username?: string | null
  email: string
  password?: string | null
  profileImage?: string | null
  dateOfBirth?: Date | string | null
  phoneNumber?: string | null
  tweets?: Prisma.TweetUncheckedCreateNestedManyWithoutAuthorInput
  likes?: Prisma.LikeUncheckedCreateNestedManyWithoutUserInput
  bookmarks?: Prisma.BookmarkUncheckedCreateNestedManyWithoutUserInput
  followers?: Prisma.FollowUncheckedCreateNestedManyWithoutFollowerInput
  following?: Prisma.FollowUncheckedCreateNestedManyWithoutFollowingInput
  notifications?: Prisma.NotificationUncheckedCreateNestedManyWithoutUserInput
  sentMessages?: Prisma.MessageUncheckedCreateNestedManyWithoutSenderInput
  receivedMessages?: Prisma.MessageUncheckedCreateNestedManyWithoutReceiverInput
}

export type UserCreateOrConnectWithoutRepliesInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutRepliesInput, Prisma.UserUncheckedCreateWithoutRepliesInput>
}

export type UserUpsertWithoutRepliesInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutRepliesInput, Prisma.UserUncheckedUpdateWithoutRepliesInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutRepliesInput, Prisma.UserUncheckedCreateWithoutRepliesInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutRepliesInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutRepliesInput, Prisma.UserUncheckedUpdateWithoutRepliesInput>
}

export type UserUpdateWithoutRepliesInput = {
  fullName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  username?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  profileImage?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  dateOfBirth?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tweets?: Prisma.TweetUpdateManyWithoutAuthorNestedInput
  likes?: Prisma.LikeUpdateManyWithoutUserNestedInput
  bookmarks?: Prisma.BookmarkUpdateManyWithoutUserNestedInput
  followers?: Prisma.FollowUpdateManyWithoutFollowerNestedInput
  following?: Prisma.FollowUpdateManyWithoutFollowingNestedInput
  notifications?: Prisma.NotificationUpdateManyWithoutUserNestedInput
  sentMessages?: Prisma.MessageUpdateManyWithoutSenderNestedInput
  receivedMessages?: Prisma.MessageUpdateManyWithoutReceiverNestedInput
}

export type UserUncheckedUpdateWithoutRepliesInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  fullName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  username?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  profileImage?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  dateOfBirth?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tweets?: Prisma.TweetUncheckedUpdateManyWithoutAuthorNestedInput
  likes?: Prisma.LikeUncheckedUpdateManyWithoutUserNestedInput
  bookmarks?: Prisma.BookmarkUncheckedUpdateManyWithoutUserNestedInput
  followers?: Prisma.FollowUncheckedUpdateManyWithoutFollowerNestedInput
  following?: Prisma.FollowUncheckedUpdateManyWithoutFollowingNestedInput
  notifications?: Prisma.NotificationUncheckedUpdateManyWithoutUserNestedInput
  sentMessages?: Prisma.MessageUncheckedUpdateManyWithoutSenderNestedInput
  receivedMessages?: Prisma.MessageUncheckedUpdateManyWithoutReceiverNestedInput
}

export type UserCreateWithoutBookmarksInput = {
  fullName?: string | null
  username?: string | null
  email: string
  password?: string | null
  profileImage?: string | null
  dateOfBirth?: Date | string | null
  phoneNumber?: string | null
  tweets?: Prisma.TweetCreateNestedManyWithoutAuthorInput
  likes?: Prisma.LikeCreateNestedManyWithoutUserInput
  replies?: Prisma.ReplyCreateNestedManyWithoutUserInput
  followers?: Prisma.FollowCreateNestedManyWithoutFollowerInput
  following?: Prisma.FollowCreateNestedManyWithoutFollowingInput
  notifications?: Prisma.NotificationCreateNestedManyWithoutUserInput
  sentMessages?: Prisma.MessageCreateNestedManyWithoutSenderInput
  receivedMessages?: Prisma.MessageCreateNestedManyWithoutReceiverInput
}

export type UserUncheckedCreateWithoutBookmarksInput = {
  id?: number
  fullName?: string | null
  username?: string | null
  email: string
  password?: string | null
  profileImage?: string | null
  dateOfBirth?: Date | string | null
  phoneNumber?: string | null
  tweets?: Prisma.TweetUncheckedCreateNestedManyWithoutAuthorInput
  likes?: Prisma.LikeUncheckedCreateNestedManyWithoutUserInput
  replies?: Prisma.ReplyUncheckedCreateNestedManyWithoutUserInput
  followers?: Prisma.FollowUncheckedCreateNestedManyWithoutFollowerInput
  following?: Prisma.FollowUncheckedCreateNestedManyWithoutFollowingInput
  notifications?: Prisma.NotificationUncheckedCreateNestedManyWithoutUserInput
  sentMessages?: Prisma.MessageUncheckedCreateNestedManyWithoutSenderInput
  receivedMessages?: Prisma.MessageUncheckedCreateNestedManyWithoutReceiverInput
}

export type UserCreateOrConnectWithoutBookmarksInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutBookmarksInput, Prisma.UserUncheckedCreateWithoutBookmarksInput>
}

export type UserUpsertWithoutBookmarksInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutBookmarksInput, Prisma.UserUncheckedUpdateWithoutBookmarksInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutBookmarksInput, Prisma.UserUncheckedCreateWithoutBookmarksInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutBookmarksInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutBookmarksInput, Prisma.UserUncheckedUpdateWithoutBookmarksInput>
}

export type UserUpdateWithoutBookmarksInput = {
  fullName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  username?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  profileImage?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  dateOfBirth?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tweets?: Prisma.TweetUpdateManyWithoutAuthorNestedInput
  likes?: Prisma.LikeUpdateManyWithoutUserNestedInput
  replies?: Prisma.ReplyUpdateManyWithoutUserNestedInput
  followers?: Prisma.FollowUpdateManyWithoutFollowerNestedInput
  following?: Prisma.FollowUpdateManyWithoutFollowingNestedInput
  notifications?: Prisma.NotificationUpdateManyWithoutUserNestedInput
  sentMessages?: Prisma.MessageUpdateManyWithoutSenderNestedInput
  receivedMessages?: Prisma.MessageUpdateManyWithoutReceiverNestedInput
}

export type UserUncheckedUpdateWithoutBookmarksInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  fullName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  username?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  profileImage?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  dateOfBirth?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tweets?: Prisma.TweetUncheckedUpdateManyWithoutAuthorNestedInput
  likes?: Prisma.LikeUncheckedUpdateManyWithoutUserNestedInput
  replies?: Prisma.ReplyUncheckedUpdateManyWithoutUserNestedInput
  followers?: Prisma.FollowUncheckedUpdateManyWithoutFollowerNestedInput
  following?: Prisma.FollowUncheckedUpdateManyWithoutFollowingNestedInput
  notifications?: Prisma.NotificationUncheckedUpdateManyWithoutUserNestedInput
  sentMessages?: Prisma.MessageUncheckedUpdateManyWithoutSenderNestedInput
  receivedMessages?: Prisma.MessageUncheckedUpdateManyWithoutReceiverNestedInput
}

export type UserCreateWithoutFollowersInput = {
  fullName?: string | null
  username?: string | null
  email: string
  password?: string | null
  profileImage?: string | null
  dateOfBirth?: Date | string | null
  phoneNumber?: string | null
  tweets?: Prisma.TweetCreateNestedManyWithoutAuthorInput
  likes?: Prisma.LikeCreateNestedManyWithoutUserInput
  replies?: Prisma.ReplyCreateNestedManyWithoutUserInput
  bookmarks?: Prisma.BookmarkCreateNestedManyWithoutUserInput
  following?: Prisma.FollowCreateNestedManyWithoutFollowingInput
  notifications?: Prisma.NotificationCreateNestedManyWithoutUserInput
  sentMessages?: Prisma.MessageCreateNestedManyWithoutSenderInput
  receivedMessages?: Prisma.MessageCreateNestedManyWithoutReceiverInput
}

export type UserUncheckedCreateWithoutFollowersInput = {
  id?: number
  fullName?: string | null
  username?: string | null
  email: string
  password?: string | null
  profileImage?: string | null
  dateOfBirth?: Date | string | null
  phoneNumber?: string | null
  tweets?: Prisma.TweetUncheckedCreateNestedManyWithoutAuthorInput
  likes?: Prisma.LikeUncheckedCreateNestedManyWithoutUserInput
  replies?: Prisma.ReplyUncheckedCreateNestedManyWithoutUserInput
  bookmarks?: Prisma.BookmarkUncheckedCreateNestedManyWithoutUserInput
  following?: Prisma.FollowUncheckedCreateNestedManyWithoutFollowingInput
  notifications?: Prisma.NotificationUncheckedCreateNestedManyWithoutUserInput
  sentMessages?: Prisma.MessageUncheckedCreateNestedManyWithoutSenderInput
  receivedMessages?: Prisma.MessageUncheckedCreateNestedManyWithoutReceiverInput
}

export type UserCreateOrConnectWithoutFollowersInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutFollowersInput, Prisma.UserUncheckedCreateWithoutFollowersInput>
}

export type UserCreateWithoutFollowingInput = {
  fullName?: string | null
  username?: string | null
  email: string
  password?: string | null
  profileImage?: string | null
  dateOfBirth?: Date | string | null
  phoneNumber?: string | null
  tweets?: Prisma.TweetCreateNestedManyWithoutAuthorInput
  likes?: Prisma.LikeCreateNestedManyWithoutUserInput
  replies?: Prisma.ReplyCreateNestedManyWithoutUserInput
  bookmarks?: Prisma.BookmarkCreateNestedManyWithoutUserInput
  followers?: Prisma.FollowCreateNestedManyWithoutFollowerInput
  notifications?: Prisma.NotificationCreateNestedManyWithoutUserInput
  sentMessages?: Prisma.MessageCreateNestedManyWithoutSenderInput
  receivedMessages?: Prisma.MessageCreateNestedManyWithoutReceiverInput
}

export type UserUncheckedCreateWithoutFollowingInput = {
  id?: number
  fullName?: string | null
  username?: string | null
  email: string
  password?: string | null
  profileImage?: string | null
  dateOfBirth?: Date | string | null
  phoneNumber?: string | null
  tweets?: Prisma.TweetUncheckedCreateNestedManyWithoutAuthorInput
  likes?: Prisma.LikeUncheckedCreateNestedManyWithoutUserInput
  replies?: Prisma.ReplyUncheckedCreateNestedManyWithoutUserInput
  bookmarks?: Prisma.BookmarkUncheckedCreateNestedManyWithoutUserInput
  followers?: Prisma.FollowUncheckedCreateNestedManyWithoutFollowerInput
  notifications?: Prisma.NotificationUncheckedCreateNestedManyWithoutUserInput
  sentMessages?: Prisma.MessageUncheckedCreateNestedManyWithoutSenderInput
  receivedMessages?: Prisma.MessageUncheckedCreateNestedManyWithoutReceiverInput
}

export type UserCreateOrConnectWithoutFollowingInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutFollowingInput, Prisma.UserUncheckedCreateWithoutFollowingInput>
}

export type UserUpsertWithoutFollowersInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutFollowersInput, Prisma.UserUncheckedUpdateWithoutFollowersInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutFollowersInput, Prisma.UserUncheckedCreateWithoutFollowersInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutFollowersInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutFollowersInput, Prisma.UserUncheckedUpdateWithoutFollowersInput>
}

export type UserUpdateWithoutFollowersInput = {
  fullName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  username?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  profileImage?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  dateOfBirth?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tweets?: Prisma.TweetUpdateManyWithoutAuthorNestedInput
  likes?: Prisma.LikeUpdateManyWithoutUserNestedInput
  replies?: Prisma.ReplyUpdateManyWithoutUserNestedInput
  bookmarks?: Prisma.BookmarkUpdateManyWithoutUserNestedInput
  following?: Prisma.FollowUpdateManyWithoutFollowingNestedInput
  notifications?: Prisma.NotificationUpdateManyWithoutUserNestedInput
  sentMessages?: Prisma.MessageUpdateManyWithoutSenderNestedInput
  receivedMessages?: Prisma.MessageUpdateManyWithoutReceiverNestedInput
}

export type UserUncheckedUpdateWithoutFollowersInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  fullName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  username?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  profileImage?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  dateOfBirth?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tweets?: Prisma.TweetUncheckedUpdateManyWithoutAuthorNestedInput
  likes?: Prisma.LikeUncheckedUpdateManyWithoutUserNestedInput
  replies?: Prisma.ReplyUncheckedUpdateManyWithoutUserNestedInput
  bookmarks?: Prisma.BookmarkUncheckedUpdateManyWithoutUserNestedInput
  following?: Prisma.FollowUncheckedUpdateManyWithoutFollowingNestedInput
  notifications?: Prisma.NotificationUncheckedUpdateManyWithoutUserNestedInput
  sentMessages?: Prisma.MessageUncheckedUpdateManyWithoutSenderNestedInput
  receivedMessages?: Prisma.MessageUncheckedUpdateManyWithoutReceiverNestedInput
}

export type UserUpsertWithoutFollowingInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutFollowingInput, Prisma.UserUncheckedUpdateWithoutFollowingInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutFollowingInput, Prisma.UserUncheckedCreateWithoutFollowingInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutFollowingInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutFollowingInput, Prisma.UserUncheckedUpdateWithoutFollowingInput>
}

export type UserUpdateWithoutFollowingInput = {
  fullName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  username?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  profileImage?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  dateOfBirth?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tweets?: Prisma.TweetUpdateManyWithoutAuthorNestedInput
  likes?: Prisma.LikeUpdateManyWithoutUserNestedInput
  replies?: Prisma.ReplyUpdateManyWithoutUserNestedInput
  bookmarks?: Prisma.BookmarkUpdateManyWithoutUserNestedInput
  followers?: Prisma.FollowUpdateManyWithoutFollowerNestedInput
  notifications?: Prisma.NotificationUpdateManyWithoutUserNestedInput
  sentMessages?: Prisma.MessageUpdateManyWithoutSenderNestedInput
  receivedMessages?: Prisma.MessageUpdateManyWithoutReceiverNestedInput
}

export type UserUncheckedUpdateWithoutFollowingInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  fullName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  username?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  profileImage?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  dateOfBirth?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tweets?: Prisma.TweetUncheckedUpdateManyWithoutAuthorNestedInput
  likes?: Prisma.LikeUncheckedUpdateManyWithoutUserNestedInput
  replies?: Prisma.ReplyUncheckedUpdateManyWithoutUserNestedInput
  bookmarks?: Prisma.BookmarkUncheckedUpdateManyWithoutUserNestedInput
  followers?: Prisma.FollowUncheckedUpdateManyWithoutFollowerNestedInput
  notifications?: Prisma.NotificationUncheckedUpdateManyWithoutUserNestedInput
  sentMessages?: Prisma.MessageUncheckedUpdateManyWithoutSenderNestedInput
  receivedMessages?: Prisma.MessageUncheckedUpdateManyWithoutReceiverNestedInput
}

export type UserCreateWithoutNotificationsInput = {
  fullName?: string | null
  username?: string | null
  email: string
  password?: string | null
  profileImage?: string | null
  dateOfBirth?: Date | string | null
  phoneNumber?: string | null
  tweets?: Prisma.TweetCreateNestedManyWithoutAuthorInput
  likes?: Prisma.LikeCreateNestedManyWithoutUserInput
  replies?: Prisma.ReplyCreateNestedManyWithoutUserInput
  bookmarks?: Prisma.BookmarkCreateNestedManyWithoutUserInput
  followers?: Prisma.FollowCreateNestedManyWithoutFollowerInput
  following?: Prisma.FollowCreateNestedManyWithoutFollowingInput
  sentMessages?: Prisma.MessageCreateNestedManyWithoutSenderInput
  receivedMessages?: Prisma.MessageCreateNestedManyWithoutReceiverInput
}

export type UserUncheckedCreateWithoutNotificationsInput = {
  id?: number
  fullName?: string | null
  username?: string | null
  email: string
  password?: string | null
  profileImage?: string | null
  dateOfBirth?: Date | string | null
  phoneNumber?: string | null
  tweets?: Prisma.TweetUncheckedCreateNestedManyWithoutAuthorInput
  likes?: Prisma.LikeUncheckedCreateNestedManyWithoutUserInput
  replies?: Prisma.ReplyUncheckedCreateNestedManyWithoutUserInput
  bookmarks?: Prisma.BookmarkUncheckedCreateNestedManyWithoutUserInput
  followers?: Prisma.FollowUncheckedCreateNestedManyWithoutFollowerInput
  following?: Prisma.FollowUncheckedCreateNestedManyWithoutFollowingInput
  sentMessages?: Prisma.MessageUncheckedCreateNestedManyWithoutSenderInput
  receivedMessages?: Prisma.MessageUncheckedCreateNestedManyWithoutReceiverInput
}

export type UserCreateOrConnectWithoutNotificationsInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutNotificationsInput, Prisma.UserUncheckedCreateWithoutNotificationsInput>
}

export type UserUpsertWithoutNotificationsInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutNotificationsInput, Prisma.UserUncheckedUpdateWithoutNotificationsInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutNotificationsInput, Prisma.UserUncheckedCreateWithoutNotificationsInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutNotificationsInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutNotificationsInput, Prisma.UserUncheckedUpdateWithoutNotificationsInput>
}

export type UserUpdateWithoutNotificationsInput = {
  fullName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  username?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  profileImage?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  dateOfBirth?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tweets?: Prisma.TweetUpdateManyWithoutAuthorNestedInput
  likes?: Prisma.LikeUpdateManyWithoutUserNestedInput
  replies?: Prisma.ReplyUpdateManyWithoutUserNestedInput
  bookmarks?: Prisma.BookmarkUpdateManyWithoutUserNestedInput
  followers?: Prisma.FollowUpdateManyWithoutFollowerNestedInput
  following?: Prisma.FollowUpdateManyWithoutFollowingNestedInput
  sentMessages?: Prisma.MessageUpdateManyWithoutSenderNestedInput
  receivedMessages?: Prisma.MessageUpdateManyWithoutReceiverNestedInput
}

export type UserUncheckedUpdateWithoutNotificationsInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  fullName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  username?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  profileImage?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  dateOfBirth?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tweets?: Prisma.TweetUncheckedUpdateManyWithoutAuthorNestedInput
  likes?: Prisma.LikeUncheckedUpdateManyWithoutUserNestedInput
  replies?: Prisma.ReplyUncheckedUpdateManyWithoutUserNestedInput
  bookmarks?: Prisma.BookmarkUncheckedUpdateManyWithoutUserNestedInput
  followers?: Prisma.FollowUncheckedUpdateManyWithoutFollowerNestedInput
  following?: Prisma.FollowUncheckedUpdateManyWithoutFollowingNestedInput
  sentMessages?: Prisma.MessageUncheckedUpdateManyWithoutSenderNestedInput
  receivedMessages?: Prisma.MessageUncheckedUpdateManyWithoutReceiverNestedInput
}

export type UserCreateWithoutSentMessagesInput = {
  fullName?: string | null
  username?: string | null
  email: string
  password?: string | null
  profileImage?: string | null
  dateOfBirth?: Date | string | null
  phoneNumber?: string | null
  tweets?: Prisma.TweetCreateNestedManyWithoutAuthorInput
  likes?: Prisma.LikeCreateNestedManyWithoutUserInput
  replies?: Prisma.ReplyCreateNestedManyWithoutUserInput
  bookmarks?: Prisma.BookmarkCreateNestedManyWithoutUserInput
  followers?: Prisma.FollowCreateNestedManyWithoutFollowerInput
  following?: Prisma.FollowCreateNestedManyWithoutFollowingInput
  notifications?: Prisma.NotificationCreateNestedManyWithoutUserInput
  receivedMessages?: Prisma.MessageCreateNestedManyWithoutReceiverInput
}

export type UserUncheckedCreateWithoutSentMessagesInput = {
  id?: number
  fullName?: string | null
  username?: string | null
  email: string
  password?: string | null
  profileImage?: string | null
  dateOfBirth?: Date | string | null
  phoneNumber?: string | null
  tweets?: Prisma.TweetUncheckedCreateNestedManyWithoutAuthorInput
  likes?: Prisma.LikeUncheckedCreateNestedManyWithoutUserInput
  replies?: Prisma.ReplyUncheckedCreateNestedManyWithoutUserInput
  bookmarks?: Prisma.BookmarkUncheckedCreateNestedManyWithoutUserInput
  followers?: Prisma.FollowUncheckedCreateNestedManyWithoutFollowerInput
  following?: Prisma.FollowUncheckedCreateNestedManyWithoutFollowingInput
  notifications?: Prisma.NotificationUncheckedCreateNestedManyWithoutUserInput
  receivedMessages?: Prisma.MessageUncheckedCreateNestedManyWithoutReceiverInput
}

export type UserCreateOrConnectWithoutSentMessagesInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutSentMessagesInput, Prisma.UserUncheckedCreateWithoutSentMessagesInput>
}

export type UserCreateWithoutReceivedMessagesInput = {
  fullName?: string | null
  username?: string | null
  email: string
  password?: string | null
  profileImage?: string | null
  dateOfBirth?: Date | string | null
  phoneNumber?: string | null
  tweets?: Prisma.TweetCreateNestedManyWithoutAuthorInput
  likes?: Prisma.LikeCreateNestedManyWithoutUserInput
  replies?: Prisma.ReplyCreateNestedManyWithoutUserInput
  bookmarks?: Prisma.BookmarkCreateNestedManyWithoutUserInput
  followers?: Prisma.FollowCreateNestedManyWithoutFollowerInput
  following?: Prisma.FollowCreateNestedManyWithoutFollowingInput
  notifications?: Prisma.NotificationCreateNestedManyWithoutUserInput
  sentMessages?: Prisma.MessageCreateNestedManyWithoutSenderInput
}

export type UserUncheckedCreateWithoutReceivedMessagesInput = {
  id?: number
  fullName?: string | null
  username?: string | null
  email: string
  password?: string | null
  profileImage?: string | null
  dateOfBirth?: Date | string | null
  phoneNumber?: string | null
  tweets?: Prisma.TweetUncheckedCreateNestedManyWithoutAuthorInput
  likes?: Prisma.LikeUncheckedCreateNestedManyWithoutUserInput
  replies?: Prisma.ReplyUncheckedCreateNestedManyWithoutUserInput
  bookmarks?: Prisma.BookmarkUncheckedCreateNestedManyWithoutUserInput
  followers?: Prisma.FollowUncheckedCreateNestedManyWithoutFollowerInput
  following?: Prisma.FollowUncheckedCreateNestedManyWithoutFollowingInput
  notifications?: Prisma.NotificationUncheckedCreateNestedManyWithoutUserInput
  sentMessages?: Prisma.MessageUncheckedCreateNestedManyWithoutSenderInput
}

export type UserCreateOrConnectWithoutReceivedMessagesInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutReceivedMessagesInput, Prisma.UserUncheckedCreateWithoutReceivedMessagesInput>
}

export type UserUpsertWithoutSentMessagesInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutSentMessagesInput, Prisma.UserUncheckedUpdateWithoutSentMessagesInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutSentMessagesInput, Prisma.UserUncheckedCreateWithoutSentMessagesInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutSentMessagesInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutSentMessagesInput, Prisma.UserUncheckedUpdateWithoutSentMessagesInput>
}

export type UserUpdateWithoutSentMessagesInput = {
  fullName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  username?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  profileImage?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  dateOfBirth?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tweets?: Prisma.TweetUpdateManyWithoutAuthorNestedInput
  likes?: Prisma.LikeUpdateManyWithoutUserNestedInput
  replies?: Prisma.ReplyUpdateManyWithoutUserNestedInput
  bookmarks?: Prisma.BookmarkUpdateManyWithoutUserNestedInput
  followers?: Prisma.FollowUpdateManyWithoutFollowerNestedInput
  following?: Prisma.FollowUpdateManyWithoutFollowingNestedInput
  notifications?: Prisma.NotificationUpdateManyWithoutUserNestedInput
  receivedMessages?: Prisma.MessageUpdateManyWithoutReceiverNestedInput
}

export type UserUncheckedUpdateWithoutSentMessagesInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  fullName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  username?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  profileImage?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  dateOfBirth?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tweets?: Prisma.TweetUncheckedUpdateManyWithoutAuthorNestedInput
  likes?: Prisma.LikeUncheckedUpdateManyWithoutUserNestedInput
  replies?: Prisma.ReplyUncheckedUpdateManyWithoutUserNestedInput
  bookmarks?: Prisma.BookmarkUncheckedUpdateManyWithoutUserNestedInput
  followers?: Prisma.FollowUncheckedUpdateManyWithoutFollowerNestedInput
  following?: Prisma.FollowUncheckedUpdateManyWithoutFollowingNestedInput
  notifications?: Prisma.NotificationUncheckedUpdateManyWithoutUserNestedInput
  receivedMessages?: Prisma.MessageUncheckedUpdateManyWithoutReceiverNestedInput
}

export type UserUpsertWithoutReceivedMessagesInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutReceivedMessagesInput, Prisma.UserUncheckedUpdateWithoutReceivedMessagesInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutReceivedMessagesInput, Prisma.UserUncheckedCreateWithoutReceivedMessagesInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutReceivedMessagesInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutReceivedMessagesInput, Prisma.UserUncheckedUpdateWithoutReceivedMessagesInput>
}

export type UserUpdateWithoutReceivedMessagesInput = {
  fullName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  username?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  profileImage?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  dateOfBirth?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tweets?: Prisma.TweetUpdateManyWithoutAuthorNestedInput
  likes?: Prisma.LikeUpdateManyWithoutUserNestedInput
  replies?: Prisma.ReplyUpdateManyWithoutUserNestedInput
  bookmarks?: Prisma.BookmarkUpdateManyWithoutUserNestedInput
  followers?: Prisma.FollowUpdateManyWithoutFollowerNestedInput
  following?: Prisma.FollowUpdateManyWithoutFollowingNestedInput
  notifications?: Prisma.NotificationUpdateManyWithoutUserNestedInput
  sentMessages?: Prisma.MessageUpdateManyWithoutSenderNestedInput
}

export type UserUncheckedUpdateWithoutReceivedMessagesInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  fullName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  username?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  profileImage?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  dateOfBirth?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tweets?: Prisma.TweetUncheckedUpdateManyWithoutAuthorNestedInput
  likes?: Prisma.LikeUncheckedUpdateManyWithoutUserNestedInput
  replies?: Prisma.ReplyUncheckedUpdateManyWithoutUserNestedInput
  bookmarks?: Prisma.BookmarkUncheckedUpdateManyWithoutUserNestedInput
  followers?: Prisma.FollowUncheckedUpdateManyWithoutFollowerNestedInput
  following?: Prisma.FollowUncheckedUpdateManyWithoutFollowingNestedInput
  notifications?: Prisma.NotificationUncheckedUpdateManyWithoutUserNestedInput
  sentMessages?: Prisma.MessageUncheckedUpdateManyWithoutSenderNestedInput
}


/**
 * Count Type UserCountOutputType
 */

export type UserCountOutputType = {
  tweets: number
  likes: number
  replies: number
  bookmarks: number
  followers: number
  following: number
  notifications: number
  sentMessages: number
  receivedMessages: number
}

export type UserCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  tweets?: boolean | UserCountOutputTypeCountTweetsArgs
  likes?: boolean | UserCountOutputTypeCountLikesArgs
  replies?: boolean | UserCountOutputTypeCountRepliesArgs
  bookmarks?: boolean | UserCountOutputTypeCountBookmarksArgs
  followers?: boolean | UserCountOutputTypeCountFollowersArgs
  following?: boolean | UserCountOutputTypeCountFollowingArgs
  notifications?: boolean | UserCountOutputTypeCountNotificationsArgs
  sentMessages?: boolean | UserCountOutputTypeCountSentMessagesArgs
  receivedMessages?: boolean | UserCountOutputTypeCountReceivedMessagesArgs
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the UserCountOutputType
   */
  select?: Prisma.UserCountOutputTypeSelect<ExtArgs> | null
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountTweetsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.TweetWhereInput
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountLikesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.LikeWhereInput
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountRepliesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ReplyWhereInput
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountBookmarksArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.BookmarkWhereInput
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountFollowersArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.FollowWhereInput
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountFollowingArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.FollowWhereInput
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountNotificationsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.NotificationWhereInput
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountSentMessagesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.MessageWhereInput
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountReceivedMessagesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.MessageWhereInput
}


export type UserSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  fullName?: boolean
  username?: boolean
  email?: boolean
  password?: boolean
  profileImage?: boolean
  dateOfBirth?: boolean
  phoneNumber?: boolean
  tweets?: boolean | Prisma.User$tweetsArgs<ExtArgs>
  likes?: boolean | Prisma.User$likesArgs<ExtArgs>
  replies?: boolean | Prisma.User$repliesArgs<ExtArgs>
  bookmarks?: boolean | Prisma.User$bookmarksArgs<ExtArgs>
  followers?: boolean | Prisma.User$followersArgs<ExtArgs>
  following?: boolean | Prisma.User$followingArgs<ExtArgs>
  notifications?: boolean | Prisma.User$notificationsArgs<ExtArgs>
  sentMessages?: boolean | Prisma.User$sentMessagesArgs<ExtArgs>
  receivedMessages?: boolean | Prisma.User$receivedMessagesArgs<ExtArgs>
  _count?: boolean | Prisma.UserCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["user"]>

export type UserSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  fullName?: boolean
  username?: boolean
  email?: boolean
  password?: boolean
  profileImage?: boolean
  dateOfBirth?: boolean
  phoneNumber?: boolean
}, ExtArgs["result"]["user"]>

export type UserSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  fullName?: boolean
  username?: boolean
  email?: boolean
  password?: boolean
  profileImage?: boolean
  dateOfBirth?: boolean
  phoneNumber?: boolean
}, ExtArgs["result"]["user"]>

export type UserSelectScalar = {
  id?: boolean
  fullName?: boolean
  username?: boolean
  email?: boolean
  password?: boolean
  profileImage?: boolean
  dateOfBirth?: boolean
  phoneNumber?: boolean
}

export type UserOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "fullName" | "username" | "email" | "password" | "profileImage" | "dateOfBirth" | "phoneNumber", ExtArgs["result"]["user"]>
export type UserInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  tweets?: boolean | Prisma.User$tweetsArgs<ExtArgs>
  likes?: boolean | Prisma.User$likesArgs<ExtArgs>
  replies?: boolean | Prisma.User$repliesArgs<ExtArgs>
  bookmarks?: boolean | Prisma.User$bookmarksArgs<ExtArgs>
  followers?: boolean | Prisma.User$followersArgs<ExtArgs>
  following?: boolean | Prisma.User$followingArgs<ExtArgs>
  notifications?: boolean | Prisma.User$notificationsArgs<ExtArgs>
  sentMessages?: boolean | Prisma.User$sentMessagesArgs<ExtArgs>
  receivedMessages?: boolean | Prisma.User$receivedMessagesArgs<ExtArgs>
  _count?: boolean | Prisma.UserCountOutputTypeDefaultArgs<ExtArgs>
}
export type UserIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}
export type UserIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}

export type $UserPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "User"
  objects: {
    tweets: Prisma.$TweetPayload<ExtArgs>[]
    likes: Prisma.$LikePayload<ExtArgs>[]
    replies: Prisma.$ReplyPayload<ExtArgs>[]
    bookmarks: Prisma.$BookmarkPayload<ExtArgs>[]
    followers: Prisma.$FollowPayload<ExtArgs>[]
    following: Prisma.$FollowPayload<ExtArgs>[]
    notifications: Prisma.$NotificationPayload<ExtArgs>[]
    sentMessages: Prisma.$MessagePayload<ExtArgs>[]
    receivedMessages: Prisma.$MessagePayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: number
    fullName: string | null
    username: string | null
    email: string
    password: string | null
    profileImage: string | null
    dateOfBirth: Date | null
    phoneNumber: string | null
  }, ExtArgs["result"]["user"]>
  composites: {}
}

export type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$UserPayload, S>

export type UserCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<UserFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: UserCountAggregateInputType | true
  }

export interface UserDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
  /**
   * Find zero or one User that matches the filter.
   * @param {UserFindUniqueArgs} args - Arguments to find a User
   * @example
   * // Get one User
   * const user = await prisma.user.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends UserFindUniqueArgs>(args: Prisma.SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one User that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
   * @example
   * // Get one User
   * const user = await prisma.user.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first User that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserFindFirstArgs} args - Arguments to find a User
   * @example
   * // Get one User
   * const user = await prisma.user.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends UserFindFirstArgs>(args?: Prisma.SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first User that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
   * @example
   * // Get one User
   * const user = await prisma.user.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Users that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Users
   * const users = await prisma.user.findMany()
   * 
   * // Get first 10 Users
   * const users = await prisma.user.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends UserFindManyArgs>(args?: Prisma.SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a User.
   * @param {UserCreateArgs} args - Arguments to create a User.
   * @example
   * // Create one User
   * const User = await prisma.user.create({
   *   data: {
   *     // ... data to create a User
   *   }
   * })
   * 
   */
  create<T extends UserCreateArgs>(args: Prisma.SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Users.
   * @param {UserCreateManyArgs} args - Arguments to create many Users.
   * @example
   * // Create many Users
   * const user = await prisma.user.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends UserCreateManyArgs>(args?: Prisma.SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Users and returns the data saved in the database.
   * @param {UserCreateManyAndReturnArgs} args - Arguments to create many Users.
   * @example
   * // Create many Users
   * const user = await prisma.user.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Users and only return the `id`
   * const userWithIdOnly = await prisma.user.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends UserCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, UserCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a User.
   * @param {UserDeleteArgs} args - Arguments to delete one User.
   * @example
   * // Delete one User
   * const User = await prisma.user.delete({
   *   where: {
   *     // ... filter to delete one User
   *   }
   * })
   * 
   */
  delete<T extends UserDeleteArgs>(args: Prisma.SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one User.
   * @param {UserUpdateArgs} args - Arguments to update one User.
   * @example
   * // Update one User
   * const user = await prisma.user.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends UserUpdateArgs>(args: Prisma.SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Users.
   * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
   * @example
   * // Delete a few Users
   * const { count } = await prisma.user.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends UserDeleteManyArgs>(args?: Prisma.SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Users.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Users
   * const user = await prisma.user.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends UserUpdateManyArgs>(args: Prisma.SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Users and returns the data updated in the database.
   * @param {UserUpdateManyAndReturnArgs} args - Arguments to update many Users.
   * @example
   * // Update many Users
   * const user = await prisma.user.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Users and only return the `id`
   * const userWithIdOnly = await prisma.user.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends UserUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, UserUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one User.
   * @param {UserUpsertArgs} args - Arguments to update or create a User.
   * @example
   * // Update or create a User
   * const user = await prisma.user.upsert({
   *   create: {
   *     // ... data to create a User
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the User we want to update
   *   }
   * })
   */
  upsert<T extends UserUpsertArgs>(args: Prisma.SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Users.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserCountArgs} args - Arguments to filter Users to count.
   * @example
   * // Count the number of Users
   * const count = await prisma.user.count({
   *   where: {
   *     // ... the filter for the Users we want to count
   *   }
   * })
  **/
  count<T extends UserCountArgs>(
    args?: Prisma.Subset<T, UserCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], UserCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a User.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends UserAggregateArgs>(args: Prisma.Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

  /**
   * Group by User.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends UserGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: UserGroupByArgs['orderBy'] }
      : { orderBy?: UserGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the User model
 */
readonly fields: UserFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for User.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__UserClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  tweets<T extends Prisma.User$tweetsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$tweetsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$TweetPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  likes<T extends Prisma.User$likesArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$likesArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$LikePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  replies<T extends Prisma.User$repliesArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$repliesArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ReplyPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  bookmarks<T extends Prisma.User$bookmarksArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$bookmarksArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$BookmarkPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  followers<T extends Prisma.User$followersArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$followersArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$FollowPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  following<T extends Prisma.User$followingArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$followingArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$FollowPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  notifications<T extends Prisma.User$notificationsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$notificationsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  sentMessages<T extends Prisma.User$sentMessagesArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$sentMessagesArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  receivedMessages<T extends Prisma.User$receivedMessagesArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$receivedMessagesArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the User model
 */
export interface UserFieldRefs {
  readonly id: Prisma.FieldRef<"User", 'Int'>
  readonly fullName: Prisma.FieldRef<"User", 'String'>
  readonly username: Prisma.FieldRef<"User", 'String'>
  readonly email: Prisma.FieldRef<"User", 'String'>
  readonly password: Prisma.FieldRef<"User", 'String'>
  readonly profileImage: Prisma.FieldRef<"User", 'String'>
  readonly dateOfBirth: Prisma.FieldRef<"User", 'DateTime'>
  readonly phoneNumber: Prisma.FieldRef<"User", 'String'>
}
    

// Custom InputTypes
/**
 * User findUnique
 */
export type UserFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  /**
   * Filter, which User to fetch.
   */
  where: Prisma.UserWhereUniqueInput
}

/**
 * User findUniqueOrThrow
 */
export type UserFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  /**
   * Filter, which User to fetch.
   */
  where: Prisma.UserWhereUniqueInput
}

/**
 * User findFirst
 */
export type UserFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  /**
   * Filter, which User to fetch.
   */
  where?: Prisma.UserWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Users to fetch.
   */
  orderBy?: Prisma.UserOrderByWithRelationInput | Prisma.UserOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Users.
   */
  cursor?: Prisma.UserWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Users from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Users.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Users.
   */
  distinct?: Prisma.UserScalarFieldEnum | Prisma.UserScalarFieldEnum[]
}

/**
 * User findFirstOrThrow
 */
export type UserFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  /**
   * Filter, which User to fetch.
   */
  where?: Prisma.UserWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Users to fetch.
   */
  orderBy?: Prisma.UserOrderByWithRelationInput | Prisma.UserOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Users.
   */
  cursor?: Prisma.UserWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Users from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Users.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Users.
   */
  distinct?: Prisma.UserScalarFieldEnum | Prisma.UserScalarFieldEnum[]
}

/**
 * User findMany
 */
export type UserFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  /**
   * Filter, which Users to fetch.
   */
  where?: Prisma.UserWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Users to fetch.
   */
  orderBy?: Prisma.UserOrderByWithRelationInput | Prisma.UserOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing Users.
   */
  cursor?: Prisma.UserWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Users from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Users.
   */
  skip?: number
  distinct?: Prisma.UserScalarFieldEnum | Prisma.UserScalarFieldEnum[]
}

/**
 * User create
 */
export type UserCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  /**
   * The data needed to create a User.
   */
  data: Prisma.XOR<Prisma.UserCreateInput, Prisma.UserUncheckedCreateInput>
}

/**
 * User createMany
 */
export type UserCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many Users.
   */
  data: Prisma.UserCreateManyInput | Prisma.UserCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * User createManyAndReturn
 */
export type UserCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * The data used to create many Users.
   */
  data: Prisma.UserCreateManyInput | Prisma.UserCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * User update
 */
export type UserUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  /**
   * The data needed to update a User.
   */
  data: Prisma.XOR<Prisma.UserUpdateInput, Prisma.UserUncheckedUpdateInput>
  /**
   * Choose, which User to update.
   */
  where: Prisma.UserWhereUniqueInput
}

/**
 * User updateMany
 */
export type UserUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update Users.
   */
  data: Prisma.XOR<Prisma.UserUpdateManyMutationInput, Prisma.UserUncheckedUpdateManyInput>
  /**
   * Filter which Users to update
   */
  where?: Prisma.UserWhereInput
  /**
   * Limit how many Users to update.
   */
  limit?: number
}

/**
 * User updateManyAndReturn
 */
export type UserUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * The data used to update Users.
   */
  data: Prisma.XOR<Prisma.UserUpdateManyMutationInput, Prisma.UserUncheckedUpdateManyInput>
  /**
   * Filter which Users to update
   */
  where?: Prisma.UserWhereInput
  /**
   * Limit how many Users to update.
   */
  limit?: number
}

/**
 * User upsert
 */
export type UserUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  /**
   * The filter to search for the User to update in case it exists.
   */
  where: Prisma.UserWhereUniqueInput
  /**
   * In case the User found by the `where` argument doesn't exist, create a new User with this data.
   */
  create: Prisma.XOR<Prisma.UserCreateInput, Prisma.UserUncheckedCreateInput>
  /**
   * In case the User was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.UserUpdateInput, Prisma.UserUncheckedUpdateInput>
}

/**
 * User delete
 */
export type UserDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  /**
   * Filter which User to delete.
   */
  where: Prisma.UserWhereUniqueInput
}

/**
 * User deleteMany
 */
export type UserDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Users to delete
   */
  where?: Prisma.UserWhereInput
  /**
   * Limit how many Users to delete.
   */
  limit?: number
}

/**
 * User.tweets
 */
export type User$tweetsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Tweet
   */
  select?: Prisma.TweetSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Tweet
   */
  omit?: Prisma.TweetOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TweetInclude<ExtArgs> | null
  where?: Prisma.TweetWhereInput
  orderBy?: Prisma.TweetOrderByWithRelationInput | Prisma.TweetOrderByWithRelationInput[]
  cursor?: Prisma.TweetWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.TweetScalarFieldEnum | Prisma.TweetScalarFieldEnum[]
}

/**
 * User.likes
 */
export type User$likesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Like
   */
  select?: Prisma.LikeSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Like
   */
  omit?: Prisma.LikeOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.LikeInclude<ExtArgs> | null
  where?: Prisma.LikeWhereInput
  orderBy?: Prisma.LikeOrderByWithRelationInput | Prisma.LikeOrderByWithRelationInput[]
  cursor?: Prisma.LikeWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.LikeScalarFieldEnum | Prisma.LikeScalarFieldEnum[]
}

/**
 * User.replies
 */
export type User$repliesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Reply
   */
  select?: Prisma.ReplySelect<ExtArgs> | null
  /**
   * Omit specific fields from the Reply
   */
  omit?: Prisma.ReplyOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ReplyInclude<ExtArgs> | null
  where?: Prisma.ReplyWhereInput
  orderBy?: Prisma.ReplyOrderByWithRelationInput | Prisma.ReplyOrderByWithRelationInput[]
  cursor?: Prisma.ReplyWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.ReplyScalarFieldEnum | Prisma.ReplyScalarFieldEnum[]
}

/**
 * User.bookmarks
 */
export type User$bookmarksArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Bookmark
   */
  select?: Prisma.BookmarkSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Bookmark
   */
  omit?: Prisma.BookmarkOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.BookmarkInclude<ExtArgs> | null
  where?: Prisma.BookmarkWhereInput
  orderBy?: Prisma.BookmarkOrderByWithRelationInput | Prisma.BookmarkOrderByWithRelationInput[]
  cursor?: Prisma.BookmarkWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.BookmarkScalarFieldEnum | Prisma.BookmarkScalarFieldEnum[]
}

/**
 * User.followers
 */
export type User$followersArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Follow
   */
  select?: Prisma.FollowSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Follow
   */
  omit?: Prisma.FollowOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.FollowInclude<ExtArgs> | null
  where?: Prisma.FollowWhereInput
  orderBy?: Prisma.FollowOrderByWithRelationInput | Prisma.FollowOrderByWithRelationInput[]
  cursor?: Prisma.FollowWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.FollowScalarFieldEnum | Prisma.FollowScalarFieldEnum[]
}

/**
 * User.following
 */
export type User$followingArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Follow
   */
  select?: Prisma.FollowSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Follow
   */
  omit?: Prisma.FollowOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.FollowInclude<ExtArgs> | null
  where?: Prisma.FollowWhereInput
  orderBy?: Prisma.FollowOrderByWithRelationInput | Prisma.FollowOrderByWithRelationInput[]
  cursor?: Prisma.FollowWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.FollowScalarFieldEnum | Prisma.FollowScalarFieldEnum[]
}

/**
 * User.notifications
 */
export type User$notificationsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Notification
   */
  select?: Prisma.NotificationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Notification
   */
  omit?: Prisma.NotificationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.NotificationInclude<ExtArgs> | null
  where?: Prisma.NotificationWhereInput
  orderBy?: Prisma.NotificationOrderByWithRelationInput | Prisma.NotificationOrderByWithRelationInput[]
  cursor?: Prisma.NotificationWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.NotificationScalarFieldEnum | Prisma.NotificationScalarFieldEnum[]
}

/**
 * User.sentMessages
 */
export type User$sentMessagesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Message
   */
  select?: Prisma.MessageSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Message
   */
  omit?: Prisma.MessageOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MessageInclude<ExtArgs> | null
  where?: Prisma.MessageWhereInput
  orderBy?: Prisma.MessageOrderByWithRelationInput | Prisma.MessageOrderByWithRelationInput[]
  cursor?: Prisma.MessageWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.MessageScalarFieldEnum | Prisma.MessageScalarFieldEnum[]
}

/**
 * User.receivedMessages
 */
export type User$receivedMessagesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Message
   */
  select?: Prisma.MessageSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Message
   */
  omit?: Prisma.MessageOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MessageInclude<ExtArgs> | null
  where?: Prisma.MessageWhereInput
  orderBy?: Prisma.MessageOrderByWithRelationInput | Prisma.MessageOrderByWithRelationInput[]
  cursor?: Prisma.MessageWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.MessageScalarFieldEnum | Prisma.MessageScalarFieldEnum[]
}

/**
 * User without action
 */
export type UserDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
}
